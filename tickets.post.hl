
/*
 * Template for HTTP POST CRUD requests.
 * This file was automatically generated using Magic's CRUDifier.
 */
.arguments
   department:string
   title:string
   description:string
.description:Creates an item in your tickets table in your [generic|tickets] database according to the specified arguments
.type:crud-create

// Needed to make sure we associate the ticket with the specified user.
auth.ticket.get

// Verifying user is authorized to access endpoint.
auth.ticket.verify:root, admin, guest
.foreign-keys
   .
      column:status
      table:status
      foreign_column:name
      foreign_name:name
      long:bool:false
   .
      column:department
      table:departments
      foreign_column:name
      foreign_name:name
      long:bool:false

// Opening up database connection.
data.connect:[generic|tickets]

   // Parametrising our create invocation.
   add:x:./*/data.create/*/values
      get-nodes:x:@.arguments/*

   // Creating our record.
   data.create
      table:tickets
      return-id:bool:true
      values
         user:x:@auth.ticket.get
         status:Open

   // Retrieving user's name and email address.
   .email
   .name
   data.connect:magic
      data.read
         table:users_extra
         values
            type
            name
         where
            and
               user.eq:x:@auth.ticket.get
               or
                  type.eq:email
                  type.eq:name
      set-value:x:@.email
         get-value:x:@data.read/*/*/type/=email/./*/value
      set-value:x:@.name
         get-value:x:@data.read/*/*/type/=name/./*/value

   // Sending user his email receipt of the ticket.
   if
      not
         eq
            config.get:"magic:smtp:host"
            .
      .lambda
         unwrap:x:+/**
         signal:magic.emails.send
            subject:x:@.arguments/*/title
            template-file:/modules/tickets/magic.startup/templates/ticket-receipt.html
            mime-type:text/html
            substitutes
               content:x:@.arguments/*/description
            email:x:@.email
            name:x:@.name
   
   // Returning result of above invoction to caller.
   response.status.set:201
   unwrap:x:+/*
   return
      id:x:@data.create
