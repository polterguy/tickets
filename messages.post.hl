
/*
 * Template for HTTP POST CRUD requests.
 * This file was automatically generated using Magic's CRUDifier.
 */
.arguments
   description:string
   ticket:int
.description:Creates an item in your messages table in your [generic|tickets] database according to the specified arguments
.type:crud-create

// Verifying user is authorized to access endpoint.
auth.ticket.verify:root, admin, guest

// Making sure we associate ticket with user.
auth.ticket.get

// Opening up database connection.
data.connect:[generic|tickets]

   // Verifying ticket belongs to user.
   if
      and
         not
            exists:x:@auth.ticket.get/*/roles/=root
         not
            exists:x:@auth.ticket.get/*/roles/=admin
      .lambda

         // Not a root user, hence we need to verify ticket belongs to user.
         data.read
            table:tickets
            where
               and
                  id.eq:x:@.arguments/*/ticket
                  user.eq:x:@auth.ticket.get
         if
            not
               exists:x:@data.read/*/*
            .lambda

               // Oops, user tried to comment on a ticket not belonging to him or her.
               log.error:User tried to comment on ticket not belonging to him or her
                  user:x:@auth.ticket.get
               throw:Not found
                  status:404
                  public:true

   else

      // User is root or admin, hence we send the OP an email about new activity related to his ticket.
      .email
      .name
      data.read
         table:tickets
         values
            user
         where
            and
               id.eq:x:@.arguments/*/ticket
      data.connect:magic
         data.read
            table:users_extra
            values
               type
               name
            where
               and
                  user.eq:x:@data.read/@data.read/*/*/user
                  or
                     type.eq:email
                     type.eq:name
         set-value:x:@.email
            get-value:x:@data.read/*/*/type/=email/./*/value
         set-value:x:@.name
            get-value:x:@data.read/*/*/type/=name/./*/value

      // Sending user his email receipt of the ticket.
      unwrap:x:+/**
      signal:magic.emails.send
         subject:x:@.arguments/*/title
         template-file:/modules/tickets/magic.startup/templates/message-receipt.html
         mime-type:text/html
         substitutes
            content:x:@.arguments/*/description
         email:x:@.email
         name:x:@.name

   // Parametrising our create invocation.
   add:x:./*/data.create/*/values
      get-nodes:x:@.arguments/*

   // Creating our record.
   data.create
      table:messages
      return-id:bool:true
      values
         user:x:@auth.ticket.get

   // Returning result of above invoction to caller.
   response.status.set:201
   unwrap:x:+/*
   return
      id:x:@data.create
